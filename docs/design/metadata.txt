Metadata
~~~~~~~~

Summary
~~~~~~~

1. Basic ideas
2. Problems
3. Ways of solving problems
4. Use-cases
5. API draft

1. Basic ideas
~~~~~~~~~~~~~~

If we look at entities that are present in GES we can see that almost all of
them need some sort of metadata:
    * GESTimeline
    * GESTimelineLayer
    * GESTimelineObject
    * GESTrackObject
    * Yet to be implemented GESProject

For all those classes to be able to contain metadatas and to avoid code
duplication as much as possible, we should have an interface to handle Metadata.
Let's call the interface GESMetadata for now (name to be defined).

2. Problems
~~~~~~~~~~~

    1) We must be able to discover all metadata items that are
       attached to object
    2) We must be able to hold metadata of any type user wants
    3) Some metadatas are read only, others are writable
    4) User should be able to query metadata easily using various criteria
    5) Metadatas should be serializable

3. Possible solution
~~~~~~~~~~~~~~~~~~~~~

    1) To implement metadata GstTagList will be used. It allows to get list of
       all available tags in specified list by calling "gst_tag_list_foreach".
     - PL: However GstTagList is not an interface
    2) This problem can be solved by means of GstTagList.
    3) ?

4. Use-cases
~~~~~~~~~~~~

    UC-1. Hold tag information about file source material.
      - TS: I think some of them are TrackObject specific... so we should be
        able to get them from the 2 types of objects
    UC-2. Hold descriptions of operations
    UC-3. Hold information about projects (title, author, description)
    UC-4. Hold user comments about any of TimelineLayer/Timeline/Project/TimelineObjects
    UC-5. Hold application specific settings (i.e. layer height, folding state
          in PiTiVi)
    UC-6. Serialize a timeline, project and keep metadatas

5. API Draft
~~~~~~~~~~~~

We have a GESMetdata class that controls metadata.

/**
 * ges_metadata_set_value
 * @containter: Target metadata
 * @metadata_item: Name of the metadata item to set
 * @value: Value to set
 * Sets value of given metadata item
 *
 */
void
ges_metadata_set_value   (GESMetadata *metadata,
                          const gchar* metadata_item,
                          const GValue *value);

void
ges_metadata_set_char    (GESMetadata *metadata,
                          const gchar* metadata_item,
                          gchar value);

void
ges_metadata_set_uchar   (GESMetadata *metadata,
                           const gchar* metadata_item,
                           guchar value);

void
ges_metadata_set_int      (GESMetadata *metadata,
                           const gchar* metadata_item,
                           gint value);

void
ges_metadata_set_uint     (GESMetadata *metadata,
                           const gchar* metadata_item,
                           guint value);

void
ges_metadata_set_int64    (GESMetadata *metadata,
                           const gchar* metadata_item,
                           gint64 value);

void
ges_metadata_set_uint64    (GESMetadata *metadata,
                            const gchar* metadata_item,
                            guint64 value);

void
ges_metadata_set_long      (GESMetadata *metadata,
                            const gchar* metadata_item,
                            glong value);

void
ges_metadata_set_ulong     (GESMetadata *metadata,
                            const gchar* metadata_item,
                            gulong value);

void
ges_metadata_set_float     (GESMetadata *metadata,
                            const gchar* metadata_item,
                            gfloat value);

void
ges_metadata_set_double    (GESMetadata *metadata,
                            const gchar* metadata_item,
                            gdouble value);

void
ges_metadata_set_date      (GESMetadata *metadata,
                            const gchar* metadata_item,
                            const GDate* value);

void
ges_metadata_set_date_time (GESMetadata *metadata,
                            const gchar* metadata_item,
                            const GstDateTime* value);

void
ges_metadata_set_string    (GESMetadata *metadata,
                            const gchar* metadata_item,
                            const gchar* value);

/**
 * ges_metadata_get_value
 * @metadata: Target metadata
 * @metadata_item: Name of the metadata item to get
 * @dest: Destination to which value of metadata item will be copied
 * Sets value of given metadata item
 *
 * Returns: TRUE if value was present in object metadata, FALSE if there is no
 * such metadata item
 */
gboolean
ges_metadata_get_value     (GESMetadata *metadata,
                            const gchar* metadata_item,
                            GValue** dest);

gboolean
ges_metadata_get_char      (GESMetadata *metadata,
                            const gchar* metadata_item,
                            gchar* dest);

gboolean
ges_metadata_get_uchar     (GESMetadata *metadata,
                            const gchar* metadata_item,
                            guchar* dest);

gboolean
ges_metadata_get_int       (GESMetadata *metadata,
                            const gchar* metadata_item,
                            gint* dest);

gboolean
ges_metadata_get_uint      (GESMetadata *metadata,
                            const gchar* metadata_item,
                            guint* dest);

gboolean
ges_metadata_get_int64     (GESMetadata *metadata,
                            const gchar* metadata_item,
                            gint64* dest);

gboolean
ges_metadata_get_uint64    (GESMetadata *metadata,
                            const gchar* metadata_item,
                            guint64* dest);

gboolean
ges_metadata_get_long      (GESMetadata *metadata,
                            const gchar* metadata_item,
                            glong* dest);

gboolean
ges_metadata_get_ulong     (GESMetadata *metadata,
                            const gchar* metadata_item,
                            gulong* dest);

gboolean
ges_metadata_get_float     (GESMetadata *metadata,
                            const gchar* metadata_item,
                            gfloat* dest);

gboolean
ges_metadata_get_double    (GESMetadata *metadata,
                            const gchar* metadata_item,
                            gdouble* dest);

gboolean
ges_metadata_get_date      (GESMetadata *metadata,
                            const gchar* metadata_item,
                            GDate** dest);

gboolean
ges_metadata_get_date_time (GESMetadata *metadata,
                            const gchar* metadata_item,
                            GstDateTime** dest);

void
ges_metadata_foreach       (GESMetadata *metadata,
                            (GESMetdataForeachFunc) func,
                            gpointer user_data);

gchar *
ges_metadata_to_string     (GESMetadata *metadata);

typedef void
(*GESMetdataForeachFunc)   (const GESMetadata *metadata,
                            gchar *key,
                            GValue *value,
                            gpointer user_data);
